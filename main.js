!function(){"use strict";class e{constructor(e,t){this._settings=e,this._form=t}_showInputError(e,t){const s=this._form.querySelector(".".concat(e.id,"-error"));e.classList.add(this._settings.inputErrorClass),s.textContent=t,s.classList.add(this._settings.errorClass)}_hideInputError(e){const t=this._form.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._settings.inputErrorClass),t.classList.remove(this._settings.errorClass),t.textContent=""}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}_hasInvalidInput(){return this._inputList.some((e=>!e.validity.valid))}_toggleButtonState(){this._hasInvalidInput()?(this._buttonElement.classList.add(this._settings.inactiveButtonClass),this._buttonElement.setAttribute("disabled",!0)):(this._buttonElement.classList.remove(this._settings.inactiveButtonClass),this._buttonElement.removeAttribute("disabled"))}_setEventListeners(){this._inputList=Array.from(this._form.querySelectorAll(this._settings.inputSelector)),this._buttonElement=this._form.querySelector(this._settings.submitButtonSelector),this._toggleButtonState(),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}resetValidation(){this._toggleButtonState(),this._inputList.forEach((e=>{this._hideInputError(e)}))}enableValidation(){this._setEventListeners(),this._form.addEventListener("submit",(function(e){e.preventDefault()}))}}function t(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class s{constructor(e,s,o,n,i){let{_id:r,name:a,link:l,likes:c}=e;t(this,"_handleLikeEvent",(()=>{this._likeButton.classList.contains("photo-card__like-button_active")?this._handleLikeClick(this,!1):this._handleLikeClick(this,!0)})),t(this,"_handleDeleteEvent",(()=>{this._handleDeleteCardClick(this)})),this._id=r,this._name=a,this._image=l,this._likes=c,this._cardSelector=s,this._handleCardClick=o,this._handleDeleteCardClick=n,this._handleLikeClick=i}getId(){return this._id}getName(){return this._name}getImageLink(){return this._image}createCard(){return this._element=this._createNewPhotoCardElement(),this._likeButton=this._element.querySelector(".photo-card__like-button"),this._deleteButton=this._element.querySelector(".photo-card__delete-button"),this._photo=this._element.querySelector(".photo-card__photo"),this._addEventListeners(),this._element}deleteCard(){this._element.remove(),this._element=null}updateLikes(e,t){this._likes=e,this._element.querySelector(".photo-card__like-count").textContent=this._likes.length,JSON.stringify(this._likes).includes(t)?this._likeButton.classList.add("photo-card__like-button_active"):this._likeButton.classList.remove("photo-card__like-button_active")}_addEventListeners(){this._addLikeEventListener(),this._addDeleteEventListener(),this._addOpenPhotoEventListener()}_createNewPhotoCardElement(){const e=this._cardSelector.querySelector(".photo-card").cloneNode(!0),t=e.querySelector(".photo-card__photo"),s=e.querySelector(".photo-card__title"),o=e.querySelector(".photo-card__like-count");return t.src=this._image,t.alt=this._name,s.textContent=this._name,o.textContent=this._likes.length,e}_addLikeEventListener(){this._likeButton.addEventListener("click",this._handleLikeEvent)}_addDeleteEventListener(){this._deleteButton.addEventListener("click",this._handleDeleteEvent)}_addOpenPhotoEventListener(){this._photo.addEventListener("click",(()=>{this._handleCardClick(this)}))}}function o(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class n{constructor(e){o(this,"_handleEscClose",(e=>{"Escape"==e.key&&this.close()})),o(this,"_handleClickOnOverlayClose",(e=>{e.target.classList.contains("popup")&&this.close()})),this._popup=document.querySelector(e),this._closeButton=this._popup.querySelector(".popup__close-button"),this.close=this.close.bind(this)}open(){this._popup.classList.add("popup_opened"),this.setEventListeners()}close(){this._popup.classList.remove("popup_opened"),this.removeEventListeners()}setEventListeners(){document.addEventListener("click",this._handleClickOnOverlayClose),document.addEventListener("keydown",this._handleEscClose),this._closeButton.addEventListener("click",this.close)}removeEventListeners(){document.removeEventListener("click",this._handleClickOnOverlayClose),document.removeEventListener("keydown",this._handleEscClose),this._closeButton.removeEventListener("click",close)}}class i extends n{constructor(e,t){var s,o;super(e),o=e=>{e.preventDefault(),this._handleSubmit(this,this._getInputValues())},(s="_handleProfileFormSubmit")in this?Object.defineProperty(this,s,{value:o,enumerable:!0,configurable:!0,writable:!0}):this[s]=o,this._handleSubmit=t,this._form=this._popup.querySelector(".form"),this._submitButton=this._popup.querySelector(".form__submit-button"),this._inputs=Array.from(this._popup.querySelectorAll(".form__text-input"))}_getInputValues(){const e={};return this._inputs.forEach((t=>{e[t.getAttribute("name")]=t.value})),e}setButtonText(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"Saving...";this._submitButton.textContent=e}setEventListeners(){this._form.addEventListener("submit",this._handleProfileFormSubmit),super.setEventListeners()}removeEventListeners(){this._form.removeEventListener("submit",this._handleProfileFormSubmit),super.removeEventListeners()}close(){this._form.reset(),super.close()}}class r{constructor(e,t){let{items:s,renderer:o}=e;this._items=s,this._renderer=o,this._container=document.querySelector(t)}clear(){this._container.innerHTML=""}renderer(){this.clear(),this._items.forEach((e=>{this.addItem(e)}))}addItem(e){const t=this._renderer(e);this._container.prepend(t)}}const a=document.querySelector(".popup-edit"),l=document.querySelector(".popup-add"),c=document.querySelector(".popup-photo"),h=document.querySelector(".popup-delete"),u=document.querySelector(".popup-edit-avatar"),_=(a.querySelector(".popup__close-button"),l.querySelector(".popup__close-button"),c.querySelector(".popup__close-button"),h.querySelector(".popup__close-button"),u.querySelector(".popup__close-button"),a.querySelector(".form")),d=_.querySelector('.form__text-input[name="name"]'),p=_.querySelector('.form__text-input[name="about-me"]'),m=l.querySelector(".form"),v=(m.querySelector('.form__text-input[name="title"]'),m.querySelector('.form__text-input[name="image-link"]'),u.querySelector(".form").querySelector('.form__text-input[name="avatar-link"]'),document.querySelector(".profile")),f=v.querySelector(".profile__edit-button"),b=v.querySelector(".profile__add-button"),S=v.querySelector(".profile__photo-edit-button"),k=document.querySelector("#photo-card__template").content,y=new Map,E={formSelector:".form",inputSelector:".form__text-input",submitButtonSelector:".form__submit-button",inactiveButtonClass:"form__submit-button_disabled",inputErrorClass:"form__text-input-error_active",errorClass:"form__input-error_visible"};let g;function L(e){const t=new s(e,k,C,q,I),o=t.createCard();return t.updateLikes(t._likes,B._id),o}function C(e){O.open(e.getImageLink(),e.getName())}function q(e){T.open(),g=e}function I(e,t){t?x.addLike(e.getId()).then((t=>{console.log("Like added succesfully",t.likes),e.updateLikes(t.likes,B.getId())})).catch((e=>{console.log(e)})):x.removeLike(e.getId()).then((t=>{console.log("Like removed succesfully",t.likes),e.updateLikes(t.likes,B.getId())})).catch((e=>{console.log(e)}))}const x=new class{constructor(e){this._options=e}getInitialCards(){return fetch(this._options.baseUrl+"/cards/",{headers:this._options.headers}).then(this._checkResponse)}setNewCard(e){let{cardName:t,cardLink:s}=e;return fetch(this._options.baseUrl+"/cards/",{method:"POST",headers:this._options.headers,body:JSON.stringify({name:t,link:s})}).then(this._checkResponse)}addLike(e){return fetch(this._options.baseUrl+"/cards/likes/"+e,{method:"PUT",headers:this._options.headers}).then(this._checkResponse)}removeLike(e){return fetch(this._options.baseUrl+"/cards/likes/"+e,{method:"DELETE",headers:this._options.headers}).then(this._checkResponse)}deleteCard(e){return fetch(this._options.baseUrl+"/cards/"+e,{method:"DELETE",headers:this._options.headers}).then(this._checkResponse)}getUserInfo(){return fetch(this._options.baseUrl+"/users/me",{headers:this._options.headers}).then(this._checkResponse)}setUserInfo(e){let{newName:t,newAbout:s}=e;return fetch(this._options.baseUrl+"/users/me",{method:"PATCH",headers:this._options.headers,body:JSON.stringify({name:t,about:s})}).then(this._checkResponse)}updateAvatar(e){return fetch(this._options.baseUrl+"/users/me/avatar",{method:"PATCH",headers:this._options.headers,body:JSON.stringify({avatar:e})}).then(this._checkResponse)}_checkResponse(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}}({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"b9d1c3b6-c0f4-4224-ad8f-4c81efa3f89d","Content-Type":"application/json"}}),B=new class{constructor(e){let{nameSelector:t,jobSelector:s,avatarSelector:o}=e;this._nameSelector=t,this._jobSelector=s,this._avatarSelector=o,this._nameElement=document.querySelector(this._nameSelector),this._jobElement=document.querySelector(this._jobSelector),this._avatarElement=document.querySelector(this._avatarSelector)}getId(){return this._id?this._id:null}getUserInfo(){return{name:this._nameElement.textContent,job:this._jobElement.textContent,avatar:this._avatarElement.src}}setUserInfo(e){let{name:t,about:s,_id:o,avatar:n}=e;this._nameElement.textContent=t,this._jobElement.textContent=s,this._avatarElement=n,this._id=o}}({nameSelector:".profile__name",jobSelector:".profile__description",avatarSelector:".profile__photo"});let w;Promise.all([x.getUserInfo(),x.getInitialCards()]).then((e=>{let[t,s]=e;B.setUserInfo(t),w=new r({items:s,renderer:L},".photos__grid"),w.renderer()})).catch((e=>{console.log(e)}));const U=new i(".popup-add",(function(e,t){const s={cardName:t.title,cardLink:t["image-link"]};e.setButtonText("Saving..."),x.setNewCard(s).then((t=>{w.addItem(t),e.close()})).catch((e=>{console.log(e)})).finally((()=>{e.setButtonText("Create")}))})),A=new i(".popup-edit",(function(e,t){e.setButtonText("Saving..."),x.setUserInfo({newName:t.name,newAbout:t["about-me"]}).then((t=>{B.setUserInfo(t),e.close()})).catch((e=>{console.log(e)})).finally((()=>{e.setButtonText("Save")}))})),T=new i(".popup-delete",(function(e){e.setButtonText("Deleting..."),x.deleteCard(g.getId()).then((()=>{g.deleteCard(),g=null,e.close()})).catch((e=>{console.log(e)})).finally((()=>{e.setButtonText("Yes")}))})),O=new class extends n{constructor(e){super(e),this._photoContainer=this._popup.querySelector(".popup-photo__container"),this._photo=this._photoContainer.querySelector(".popup-photo__photo"),this._title=this._photoContainer.querySelector(".popup-photo__title")}open(e,t){this._photo.src=e,this._title.textContent=t,this._photo.alt=t,super.open()}}(".popup-photo"),P=new i(".popup-edit-avatar",(function(e,t){e.setButtonText("Saving..."),x.updateAvatar(t["avatar-link"]).then((t=>{console.log("Avatar updated ",t),B.setUserInfo(t),e.close()})).catch((e=>{console.log(e)})).finally((()=>{e.setButtonText("Save")}))}));Array.from(document.querySelectorAll(E.formSelector)).forEach((t=>{const s=t.getAttribute("name"),o=new e(E,t);o.enableValidation(),y.set(s,o)})),b.addEventListener("click",(()=>{U.open(),y.get("add-form").resetValidation()})),f.addEventListener("click",(()=>{const e=B.getUserInfo();d.value=e.name,p.value=e.job,A.open(),y.get("edit-form").resetValidation()})),S.addEventListener("click",(()=>{P.open(),y.get("edit-avatar-form").resetValidation()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,